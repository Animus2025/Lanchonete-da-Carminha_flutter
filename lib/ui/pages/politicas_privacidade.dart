import 'package:flutter/material.dart';
import '../themes/app_theme.dart';

/// P√°gina que exibe as Pol√≠ticas de Privacidade do aplicativo.
/// Permite alternar entre modo claro e escuro usando o bot√£o na AppBar.
class PoliticaPrivacidadePage extends StatelessWidget {
  /// Fun√ß√£o para alternar o tema do app (claro/escuro).
  final VoidCallback? toggleTheme;

  /// Construtor da p√°gina, recebe a fun√ß√£o de altern√¢ncia de tema.
  const PoliticaPrivacidadePage({Key? key, this.toggleTheme}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    // Detecta se o app est√° no modo escuro.
    final isDarkMode = Theme.of(context).brightness == Brightness.dark;
    // Define a cor do texto conforme o tema.
    final textColor = isDarkMode ? AppColors.laranja : AppColors.preto;

    return Scaffold(
      // AppBar personalizada com t√≠tulo, cor e bot√£o de altern√¢ncia de tema.
      appBar: AppBar(
        title: const Text(
          'Pol√≠ticas de Privacidade',
          style: TextStyle(
            color: AppColors.laranja,
            fontWeight: FontWeight.bold,
            fontFamily: 'BebasNeue',
          ),
        ),
        backgroundColor: AppColors.preto,
        iconTheme: const IconThemeData(color: AppColors.laranja),
        actions: [
          IconButton(
            icon: Icon(
              isDarkMode ? Icons.light_mode : Icons.dark_mode,
              color: AppColors.laranja,
            ),
            onPressed: () {
              // Chama a fun√ß√£o de altern√¢ncia de tema, se fornecida.
              if (toggleTheme != null) {
                toggleTheme!();
              } else {
                // Alternativa para navega√ß√£o por rota sem par√¢metro.
                final parent = ModalRoute.of(context)?.settings.arguments;
                if (parent is VoidCallback) parent();
              }
            },
            tooltip: 'Alternar tema',
          ),
        ],
      ),
      // Corpo da p√°gina com rolagem e padding.
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // T√≠tulo centralizado e destacado.
            Center(
              child: Text(
                'Pol√≠ticas de Privacidade - Lanchonete da Carminha',
                textAlign: TextAlign.center,
                style: const TextStyle(
                  color: AppColors.laranja,
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  fontFamily: 'BebasNeue',
                ),
              ),
            ),
            const SizedBox(height: 16),
            // Data da √∫ltima atualiza√ß√£o.
            Text(
              '√öltima atualiza√ß√£o: 28/05/2025\n',
              style: TextStyle(
                color: textColor,
                fontSize: 16,
                fontFamily: 'BebasNeue',
              ),
            ),
            // Se√ß√µes da pol√≠tica de privacidade, cada uma com t√≠tulo e par√°grafo.
            _titulo('1. Coleta de Informa√ß√µes', textColor),
            _paragrafo(
              'Coletamos informa√ß√µes fornecidas por voc√™ ao utilizar o app, como:\n'
              '- Nome\n'
              '- CPF\n'
              '- Endere√ßo de e-mail\n'
              '- N√∫mero de telefone\n'
              '- Endere√ßo residencial\n'
              '- Informa√ß√µes de navega√ß√£o (cookies ou logs de uso)\n',
              textColor,
            ),
            _titulo('2. Uso das Informa√ß√µes', textColor),
            _paragrafo(
              'As informa√ß√µes coletadas s√£o utilizadas para:\n'
              '- Processar pedidos\n'
              '- Melhorar sua experi√™ncia no app\n'
              '- Enviar notifica√ß√µes relacionadas ao pedido (ex: confirma√ß√£o, promo√ß√µes)\n',
              textColor,
            ),
            _titulo('3. Compartilhamento de Dados', textColor),
            _paragrafo(
              'N√£o compartilhamos seus dados com terceiros, exceto quando necess√°rio para:\n'
              '- Cumprir exig√™ncias legais\n'
              '- Processar pagamentos (se aplic√°vel)\n',
              textColor,
            ),
            _titulo('4. Seguran√ßa', textColor),
            _paragrafo(
              'Adotamos medidas de seguran√ßa para proteger suas informa√ß√µes contra acesso n√£o autorizado, '
              'altera√ß√£o, divulga√ß√£o ou destrui√ß√£o.\n',
              textColor,
            ),
            _titulo('5. Seus Direitos', textColor),
            _paragrafo(
              'Voc√™ pode solicitar:\n'
              '- Acesso aos seus dados\n'
              '- Corre√ß√£o ou exclus√£o de dados\n'
              '- Cancelamento do uso das informa√ß√µes\n',
              textColor,
            ),
            _titulo('6. Reten√ß√£o de Dados', textColor),
            _paragrafo(
              'Seus dados ser√£o mantidos enquanto sua conta estiver ativa ou conforme necess√°rio para cumprir obriga√ß√µes legais.\n',
              textColor,
            ),
            _titulo('7. Altera√ß√µes nesta Pol√≠tica', textColor),
            _paragrafo(
              'Podemos atualizar esta pol√≠tica periodicamente. Notificaremos sobre mudan√ßas relevantes pelo app ou e-mail.\n',
              textColor,
            ),
            _titulo('8. Consentimento', textColor),
            _paragrafo(
              'Ao utilizar nosso aplicativo, voc√™ concorda com esta Pol√≠tica de Privacidade.\n',
              textColor,
            ),
            _titulo('9. Contato', textColor),
            _paragrafo(
              'Se tiver d√∫vidas, entre em contato conosco:\n'
              'üìß lanchonetecarminha@gmail.com\n'
              'üìû (31) 97152-0049\n',
              textColor,
            ),
          ],
        ),
      ),
    );
  }

  /// Widget auxiliar para exibir t√≠tulos das se√ß√µes, com cor e fonte padronizadas.
  Widget _titulo(String texto, Color textColor) {
    return Padding(
      padding: const EdgeInsets.only(top: 2.0, bottom: 2.0),
      child: Text(
        texto,
        style: TextStyle(
          fontSize: 22,
          fontWeight: FontWeight.bold,
          color: textColor,
          fontFamily: 'BebasNeue',
        ),
      ),
    );
  }

  /// Widget auxiliar para exibir par√°grafos das se√ß√µes, com cor e fonte padronizadas.
  Widget _paragrafo(String texto, Color textColor) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12.0),
      child: Text(
        texto,
        style: TextStyle(
          color: textColor,
          fontSize: 16,
          fontFamily: 'BebasNeue',
        ),
      ),
    );
  }
}
